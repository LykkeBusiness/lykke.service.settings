@using Newtonsoft.Json;
@model List<Web.Models.RoleModel>

@{
    ViewBag.Title = "Manage Roles";
}

<ul class="nav nav-tabs">
    <li><a href="@Url.Action("ManageUsers")">Manage Users</a></li>
    <li class="active"><a href="@Url.Action("ManageRoles")">Manage Roles</a></li>
</ul>

<div class="editItems">

</div>

<div id="editModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add New Repository</h4>
            </div>
            <div class="modal-body" id="editRole">
                @*<div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" eTag="" data-rowKey="" class="form-control" placeholder="" value="" />
                </div>*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="add">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">

        function elemCancel(elem) {
            $(elem).parent().parent().remove();
        }

        function makeKeyValuesInputAutocomplete() {
            $('#editRole').find('input.keyValueInput').autocomplete({
                source: $.keyValueNames
            });
        }

        function addKeyValue(elem) {
            var html = '<tr class="keyValues">' +
                '<td class="keyValueRowKey"><input type="text" class="viewMode form-control keyValueInput"/></td>' +
                '<td class="access"><select class="form-control"><option value="false" selected>Read</option><option value="true">Write</option></select></td>' +
                '<td><a href="javascript:;" class="elemCancel col-md-1" onclick="elemCancel(this)" style="width:20px; height:20px;"></a></td></tr>';

            $(elem).parent().before(html);
            makeKeyValuesInputAutocomplete();
        }

        $(function () {
            $.keyValuesList = [];
            $.keyValueNames = @Html.Raw(ViewBag.KeyValueNames);
            
            $.populateRoles = function(json) {
                var list = eval('(' + json + ')');
                $.keyValuesList = list;
                var html =
                    '<table class="table table-striped table-bordered"><tr><th style="text-align:center">Role</th><th>Key Access <span class="viewSpan" style="background-color:#5cb85c;">Read</span> <span class="viewSpan" style="background-color:#f0ad4e;">Write</span></th><th style="text-align:center">Actions</th></tr>';
                for (var i = 0; i < list.length; i++) {
                    var elem = list[i];
                    html += '<tr elemId="' + elem.RowKey + '">' +
                        '<td><span class="viewMode">' + elem.Name + '</span><input type="text" class="editMode form-control"/></td>';

                    html += '<td class="col-md-8">';
                    if (elem.KeyValues.length) {
                        for (var j = 0; j < elem.KeyValues.length; j++) {
                            var keyValue = elem.KeyValues[j];
                            html += '<span class="viewMode viewSpan" style="background-color:' + (keyValue.HasFullAccess ? '#f0ad4e' : '#5cb85c') + '">' + keyValue.RowKey + '</span>';
                        }
                    }
                    html += '</td>';

                    html += '<td class="actions" style="text-align:center"><a href="javascript:;" class="elemEdit"></a><a href="javascript:;" class="elemDelete"></a><a href="javascript:;" style="display:none" class="elemSave"></a><a href="javascript:;" style="display:none" class="elemCancel" data-type="old"></a></td></tr>';
                }

                html += '<tr elemId="*"><td id="addRole"><button class="btn btn-primary">Add</button></td><td></td><td></tr>';

                html += '</table>';
                var parent = $('.editItems');
                parent.empty();
                parent.append($(html));

                $.generateEditHtml = function(role) {
                    var html =
                        '<div class="form-group"><label for="name">Name</label> <input type="text" id="name" eTag="" data-rowKey="' + role.RowKey + '" class="form-control" placeholder="" value="' + role.Name + '" /></div>';

                    //$('#name').attr('data-rowKey', role.RowKey).val(role.Name);

                    html += 
                        '<table class="table table-striped table-bordered" id="editRoleTable"><tr><th>Name</th><th>Access</th><th>Actions</th></tr>';

                    if (role.KeyValues.length) {
                        for (var i = 0; i < role.KeyValues.length; i++) {
                            var keyValue = role.KeyValues[i];
                            html += '<tr class="keyValues">' +
                                '<td class="keyValueRowKey"><input type="text" class="viewMode form-control keyValueInput" value="' + keyValue.RowKey + '"/></td>' +
                                '<td class="access"><select class="form-control"><option value="false"' + (!keyValue.HasFullAccess ? 'selected' : '') + '>Read</option><option value="true"' + (keyValue.HasFullAccess ? 'selected' : '') + '>Write</option></select></td>' +
                                '<td><a href="javascript:;" class="elemCancel col-md-1" onclick="elemCancel(this)" style="width:20px; height:20px;"></a></td></tr>';
                        }
                    }

                    html += '<tr elemId="*"><td id="addKeyValue" onclick="addKeyValue(this)"><button class="btn btn-primary">Add</button></td><td></td><td></td></tr></table>';

                    //$('#editRole').children().eq(1).remove();
                    $('#editRole').empty();
                    $('#editRole').append($(html));

                    makeKeyValuesInputAutocomplete();

                    $('#editModal').modal();
                }

                $('#addRole').click(function () {
                    var role = {
                        Name: '',
                        KeyValues: []
                    }
                    $.generateEditHtml(role);
                    
                });

                $(".elemCancel").click(function () {
                    elemCancel(this);
                });

                $('.elemEdit').click(function() {
                    var parent = $(this).parents('tr');
                    var rowKey = parent.attr('elemId');
                    var role = $.keyValuesList.find(x => x.RowKey === rowKey);
                    if (role == null)
                        return;

                    $.generateEditHtml(role);
                });

                $('.elemSave').click(function() {
                    var elemId = $(this).parents('tr').attr('elemId');

                    var url = '@Url.Action("SaveRole")';
                    $.post(url,
                        {
                            'role': {
                                'name': $('tr[elemId="' + elemId + '"] td.email input').val()
                            }
                        },
                        function(data) { $.populateRoles(data.json) });
                });

                $('.elemDelete').click(function() {
                    var elemId = $(this).parents('tr').attr('elemId');
                    var url = '@Url.Action("RemoveRole")';
                    if (confirm('The "' + elemId + '" role will be deleted.')) {
                        $.post(url, { 'roleId': elemId }, function(data) { $.populateRoles(data.json) });
                    }
                });
            }

            $('#add').click(function() {
                var url = '@Url.Action("SaveRole")';

                var keyValues = [];

                $('#editRoleTable').find('tr.keyValues').each(function() {
                    var item = $(this);
                    if (item.find('input').val() !== '') {
                        var rowKey = item.find('input').val();
                        var hasFullAccess = item.find('select').val();
                        var keyValue = {
                            'rowKey': rowKey,
                            'hasFullAccess': hasFullAccess
                        }
                        keyValues.push(keyValue);
                    }
                });

                $.post(url,
                    {
                        'role': {
                            'rowKey': $('#name').attr('data-rowKey'),
                            'name': $('#name').val(),
                            'keyValues': keyValues
                        }
                    },
                    function (data) {
                        if (data.status === 1) {
                            $.populateRoles(data.json);
                            $('#editModal').modal('hide');
                        }
                    });
            });

            $.populateRoles('@Html.Raw(JsonConvert.SerializeObject(Model).Replace("'", "\\'"))');
        });
    </script>
}